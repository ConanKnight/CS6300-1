/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-04-15 19:10:39 UTC)
 * on 2014-05-05 at 02:45:19 UTC 
 * Modify at your own risk.
 */

package com.team25project3.taskinfoendpoint;

/**
 * Service definition for Taskinfoendpoint (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link TaskinfoendpointRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Taskinfoendpoint extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.16.0-rc of the taskinfoendpoint library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://team25p3.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "taskinfoendpoint/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Taskinfoendpoint(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Taskinfoendpoint(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "getTaskInfo".
   *
   * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
   * optional parameters, call the {@link GetTaskInfo#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public GetTaskInfo getTaskInfo(java.lang.String id) throws java.io.IOException {
    GetTaskInfo result = new GetTaskInfo(id);
    initialize(result);
    return result;
  }

  public class GetTaskInfo extends TaskinfoendpointRequest<com.team25project3.taskinfoendpoint.model.TaskInfo> {

    private static final String REST_PATH = "taskinfo/{id}";

    /**
     * Create a request for the method "getTaskInfo".
     *
     * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
     * optional parameters, call the {@link GetTaskInfo#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetTaskInfo#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetTaskInfo(java.lang.String id) {
      super(Taskinfoendpoint.this, "GET", REST_PATH, null, com.team25project3.taskinfoendpoint.model.TaskInfo.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTaskInfo setAlt(java.lang.String alt) {
      return (GetTaskInfo) super.setAlt(alt);
    }

    @Override
    public GetTaskInfo setFields(java.lang.String fields) {
      return (GetTaskInfo) super.setFields(fields);
    }

    @Override
    public GetTaskInfo setKey(java.lang.String key) {
      return (GetTaskInfo) super.setKey(key);
    }

    @Override
    public GetTaskInfo setOauthToken(java.lang.String oauthToken) {
      return (GetTaskInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTaskInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTaskInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTaskInfo setQuotaUser(java.lang.String quotaUser) {
      return (GetTaskInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTaskInfo setUserIp(java.lang.String userIp) {
      return (GetTaskInfo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public GetTaskInfo setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public GetTaskInfo set(String parameterName, Object value) {
      return (GetTaskInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "insertTaskInfo".
   *
   * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
   * optional parameters, call the {@link InsertTaskInfo#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.team25project3.taskinfoendpoint.model.TaskInfo}
   * @return the request
   */
  public InsertTaskInfo insertTaskInfo(com.team25project3.taskinfoendpoint.model.TaskInfo content) throws java.io.IOException {
    InsertTaskInfo result = new InsertTaskInfo(content);
    initialize(result);
    return result;
  }

  public class InsertTaskInfo extends TaskinfoendpointRequest<com.team25project3.taskinfoendpoint.model.TaskInfo> {

    private static final String REST_PATH = "taskinfo";

    /**
     * Create a request for the method "insertTaskInfo".
     *
     * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
     * optional parameters, call the {@link InsertTaskInfo#execute()} method to invoke the remote
     * operation. <p> {@link InsertTaskInfo#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.team25project3.taskinfoendpoint.model.TaskInfo}
     * @since 1.13
     */
    protected InsertTaskInfo(com.team25project3.taskinfoendpoint.model.TaskInfo content) {
      super(Taskinfoendpoint.this, "POST", REST_PATH, content, com.team25project3.taskinfoendpoint.model.TaskInfo.class);
    }

    @Override
    public InsertTaskInfo setAlt(java.lang.String alt) {
      return (InsertTaskInfo) super.setAlt(alt);
    }

    @Override
    public InsertTaskInfo setFields(java.lang.String fields) {
      return (InsertTaskInfo) super.setFields(fields);
    }

    @Override
    public InsertTaskInfo setKey(java.lang.String key) {
      return (InsertTaskInfo) super.setKey(key);
    }

    @Override
    public InsertTaskInfo setOauthToken(java.lang.String oauthToken) {
      return (InsertTaskInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public InsertTaskInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InsertTaskInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InsertTaskInfo setQuotaUser(java.lang.String quotaUser) {
      return (InsertTaskInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public InsertTaskInfo setUserIp(java.lang.String userIp) {
      return (InsertTaskInfo) super.setUserIp(userIp);
    }

    @Override
    public InsertTaskInfo set(String parameterName, Object value) {
      return (InsertTaskInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listTaskInfo".
   *
   * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
   * optional parameters, call the {@link ListTaskInfo#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public ListTaskInfo listTaskInfo() throws java.io.IOException {
    ListTaskInfo result = new ListTaskInfo();
    initialize(result);
    return result;
  }

  public class ListTaskInfo extends TaskinfoendpointRequest<com.team25project3.taskinfoendpoint.model.CollectionResponseTaskInfo> {

    private static final String REST_PATH = "taskinfo1";

    /**
     * Create a request for the method "listTaskInfo".
     *
     * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
     * optional parameters, call the {@link ListTaskInfo#execute()} method to invoke the remote
     * operation. <p> {@link
     * ListTaskInfo#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected ListTaskInfo() {
      super(Taskinfoendpoint.this, "GET", REST_PATH, null, com.team25project3.taskinfoendpoint.model.CollectionResponseTaskInfo.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListTaskInfo setAlt(java.lang.String alt) {
      return (ListTaskInfo) super.setAlt(alt);
    }

    @Override
    public ListTaskInfo setFields(java.lang.String fields) {
      return (ListTaskInfo) super.setFields(fields);
    }

    @Override
    public ListTaskInfo setKey(java.lang.String key) {
      return (ListTaskInfo) super.setKey(key);
    }

    @Override
    public ListTaskInfo setOauthToken(java.lang.String oauthToken) {
      return (ListTaskInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public ListTaskInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListTaskInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListTaskInfo setQuotaUser(java.lang.String quotaUser) {
      return (ListTaskInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListTaskInfo setUserIp(java.lang.String userIp) {
      return (ListTaskInfo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListTaskInfo setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListTaskInfo setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListTaskInfo set(String parameterName, Object value) {
      return (ListTaskInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listTaskInfoSync".
   *
   * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
   * optional parameters, call the {@link ListTaskInfoSync#execute()} method to invoke the remote
   * operation.
   *
   * @param synctime
   * @return the request
   */
  public ListTaskInfoSync listTaskInfoSync(java.lang.String synctime) throws java.io.IOException {
    ListTaskInfoSync result = new ListTaskInfoSync(synctime);
    initialize(result);
    return result;
  }

  public class ListTaskInfoSync extends TaskinfoendpointRequest<com.team25project3.taskinfoendpoint.model.CollectionResponseTaskInfo> {

    private static final String REST_PATH = "taskinfo2";

    /**
     * Create a request for the method "listTaskInfoSync".
     *
     * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
     * optional parameters, call the {@link ListTaskInfoSync#execute()} method to invoke the remote
     * operation. <p> {@link ListTaskInfoSync#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param synctime
     * @since 1.13
     */
    protected ListTaskInfoSync(java.lang.String synctime) {
      super(Taskinfoendpoint.this, "GET", REST_PATH, null, com.team25project3.taskinfoendpoint.model.CollectionResponseTaskInfo.class);
      this.synctime = com.google.api.client.util.Preconditions.checkNotNull(synctime, "Required parameter synctime must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListTaskInfoSync setAlt(java.lang.String alt) {
      return (ListTaskInfoSync) super.setAlt(alt);
    }

    @Override
    public ListTaskInfoSync setFields(java.lang.String fields) {
      return (ListTaskInfoSync) super.setFields(fields);
    }

    @Override
    public ListTaskInfoSync setKey(java.lang.String key) {
      return (ListTaskInfoSync) super.setKey(key);
    }

    @Override
    public ListTaskInfoSync setOauthToken(java.lang.String oauthToken) {
      return (ListTaskInfoSync) super.setOauthToken(oauthToken);
    }

    @Override
    public ListTaskInfoSync setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListTaskInfoSync) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListTaskInfoSync setQuotaUser(java.lang.String quotaUser) {
      return (ListTaskInfoSync) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListTaskInfoSync setUserIp(java.lang.String userIp) {
      return (ListTaskInfoSync) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String synctime;

    /**

     */
    public java.lang.String getSynctime() {
      return synctime;
    }

    public ListTaskInfoSync setSynctime(java.lang.String synctime) {
      this.synctime = synctime;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListTaskInfoSync setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListTaskInfoSync setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListTaskInfoSync set(String parameterName, Object value) {
      return (ListTaskInfoSync) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "listTaskInfoSyncUser".
   *
   * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
   * optional parameters, call the {@link ListTaskInfoSyncUser#execute()} method to invoke the remote
   * operation.
   *
   * @param synctime
   * @param uID
   * @return the request
   */
  public ListTaskInfoSyncUser listTaskInfoSyncUser(java.lang.String synctime, java.lang.String uID) throws java.io.IOException {
    ListTaskInfoSyncUser result = new ListTaskInfoSyncUser(synctime, uID);
    initialize(result);
    return result;
  }

  public class ListTaskInfoSyncUser extends TaskinfoendpointRequest<com.team25project3.taskinfoendpoint.model.CollectionResponseTaskInfo> {

    private static final String REST_PATH = "taskinfo3";

    /**
     * Create a request for the method "listTaskInfoSyncUser".
     *
     * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
     * optional parameters, call the {@link ListTaskInfoSyncUser#execute()} method to invoke the
     * remote operation. <p> {@link ListTaskInfoSyncUser#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param synctime
     * @param uID
     * @since 1.13
     */
    protected ListTaskInfoSyncUser(java.lang.String synctime, java.lang.String uID) {
      super(Taskinfoendpoint.this, "GET", REST_PATH, null, com.team25project3.taskinfoendpoint.model.CollectionResponseTaskInfo.class);
      this.synctime = com.google.api.client.util.Preconditions.checkNotNull(synctime, "Required parameter synctime must be specified.");
      this.uID = com.google.api.client.util.Preconditions.checkNotNull(uID, "Required parameter uID must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public ListTaskInfoSyncUser setAlt(java.lang.String alt) {
      return (ListTaskInfoSyncUser) super.setAlt(alt);
    }

    @Override
    public ListTaskInfoSyncUser setFields(java.lang.String fields) {
      return (ListTaskInfoSyncUser) super.setFields(fields);
    }

    @Override
    public ListTaskInfoSyncUser setKey(java.lang.String key) {
      return (ListTaskInfoSyncUser) super.setKey(key);
    }

    @Override
    public ListTaskInfoSyncUser setOauthToken(java.lang.String oauthToken) {
      return (ListTaskInfoSyncUser) super.setOauthToken(oauthToken);
    }

    @Override
    public ListTaskInfoSyncUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (ListTaskInfoSyncUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public ListTaskInfoSyncUser setQuotaUser(java.lang.String quotaUser) {
      return (ListTaskInfoSyncUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public ListTaskInfoSyncUser setUserIp(java.lang.String userIp) {
      return (ListTaskInfoSyncUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String synctime;

    /**

     */
    public java.lang.String getSynctime() {
      return synctime;
    }

    public ListTaskInfoSyncUser setSynctime(java.lang.String synctime) {
      this.synctime = synctime;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String uID;

    /**

     */
    public java.lang.String getUID() {
      return uID;
    }

    public ListTaskInfoSyncUser setUID(java.lang.String uID) {
      this.uID = uID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String cursor;

    /**

     */
    public java.lang.String getCursor() {
      return cursor;
    }

    public ListTaskInfoSyncUser setCursor(java.lang.String cursor) {
      this.cursor = cursor;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer limit;

    /**

     */
    public java.lang.Integer getLimit() {
      return limit;
    }

    public ListTaskInfoSyncUser setLimit(java.lang.Integer limit) {
      this.limit = limit;
      return this;
    }

    @Override
    public ListTaskInfoSyncUser set(String parameterName, Object value) {
      return (ListTaskInfoSyncUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeTaskInfo".
   *
   * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
   * optional parameters, call the {@link RemoveTaskInfo#execute()} method to invoke the remote
   * operation.
   *
   * @param id
   * @return the request
   */
  public RemoveTaskInfo removeTaskInfo(java.lang.String id) throws java.io.IOException {
    RemoveTaskInfo result = new RemoveTaskInfo(id);
    initialize(result);
    return result;
  }

  public class RemoveTaskInfo extends TaskinfoendpointRequest<Void> {

    private static final String REST_PATH = "taskinfo/{id}";

    /**
     * Create a request for the method "removeTaskInfo".
     *
     * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
     * optional parameters, call the {@link RemoveTaskInfo#execute()} method to invoke the remote
     * operation. <p> {@link RemoveTaskInfo#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveTaskInfo(java.lang.String id) {
      super(Taskinfoendpoint.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveTaskInfo setAlt(java.lang.String alt) {
      return (RemoveTaskInfo) super.setAlt(alt);
    }

    @Override
    public RemoveTaskInfo setFields(java.lang.String fields) {
      return (RemoveTaskInfo) super.setFields(fields);
    }

    @Override
    public RemoveTaskInfo setKey(java.lang.String key) {
      return (RemoveTaskInfo) super.setKey(key);
    }

    @Override
    public RemoveTaskInfo setOauthToken(java.lang.String oauthToken) {
      return (RemoveTaskInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveTaskInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveTaskInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveTaskInfo setQuotaUser(java.lang.String quotaUser) {
      return (RemoveTaskInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveTaskInfo setUserIp(java.lang.String userIp) {
      return (RemoveTaskInfo) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String id;

    /**

     */
    public java.lang.String getId() {
      return id;
    }

    public RemoveTaskInfo setId(java.lang.String id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveTaskInfo set(String parameterName, Object value) {
      return (RemoveTaskInfo) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateTaskInfo".
   *
   * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
   * optional parameters, call the {@link UpdateTaskInfo#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.team25project3.taskinfoendpoint.model.TaskInfo}
   * @return the request
   */
  public UpdateTaskInfo updateTaskInfo(com.team25project3.taskinfoendpoint.model.TaskInfo content) throws java.io.IOException {
    UpdateTaskInfo result = new UpdateTaskInfo(content);
    initialize(result);
    return result;
  }

  public class UpdateTaskInfo extends TaskinfoendpointRequest<com.team25project3.taskinfoendpoint.model.TaskInfo> {

    private static final String REST_PATH = "taskinfo";

    /**
     * Create a request for the method "updateTaskInfo".
     *
     * This request holds the parameters needed by the the taskinfoendpoint server.  After setting any
     * optional parameters, call the {@link UpdateTaskInfo#execute()} method to invoke the remote
     * operation. <p> {@link UpdateTaskInfo#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.team25project3.taskinfoendpoint.model.TaskInfo}
     * @since 1.13
     */
    protected UpdateTaskInfo(com.team25project3.taskinfoendpoint.model.TaskInfo content) {
      super(Taskinfoendpoint.this, "PUT", REST_PATH, content, com.team25project3.taskinfoendpoint.model.TaskInfo.class);
    }

    @Override
    public UpdateTaskInfo setAlt(java.lang.String alt) {
      return (UpdateTaskInfo) super.setAlt(alt);
    }

    @Override
    public UpdateTaskInfo setFields(java.lang.String fields) {
      return (UpdateTaskInfo) super.setFields(fields);
    }

    @Override
    public UpdateTaskInfo setKey(java.lang.String key) {
      return (UpdateTaskInfo) super.setKey(key);
    }

    @Override
    public UpdateTaskInfo setOauthToken(java.lang.String oauthToken) {
      return (UpdateTaskInfo) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateTaskInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateTaskInfo) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateTaskInfo setQuotaUser(java.lang.String quotaUser) {
      return (UpdateTaskInfo) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateTaskInfo setUserIp(java.lang.String userIp) {
      return (UpdateTaskInfo) super.setUserIp(userIp);
    }

    @Override
    public UpdateTaskInfo set(String parameterName, Object value) {
      return (UpdateTaskInfo) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Taskinfoendpoint}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Taskinfoendpoint}. */
    @Override
    public Taskinfoendpoint build() {
      return new Taskinfoendpoint(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link TaskinfoendpointRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setTaskinfoendpointRequestInitializer(
        TaskinfoendpointRequestInitializer taskinfoendpointRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(taskinfoendpointRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
